package rtlspektrum;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : line 49</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("rtlpower") 
public class tuning_state extends StructObject {
	static {
		BridJ.register();
	}
	@Field(0) 
	public int freq() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public tuning_state freq(int freq) {
		this.io.setIntField(this, 0, freq);
		return this;
	}
	@Field(1) 
	public int rate() {
		return this.io.getIntField(this, 1);
	}
	@Field(1) 
	public tuning_state rate(int rate) {
		this.io.setIntField(this, 1, rate);
		return this;
	}
	@Field(2) 
	public int gain() {
		return this.io.getIntField(this, 2);
	}
	@Field(2) 
	public tuning_state gain(int gain) {
		this.io.setIntField(this, 2, gain);
		return this;
	}
	@Field(3) 
	public int bin_e() {
		return this.io.getIntField(this, 3);
	}
	@Field(3) 
	public tuning_state bin_e(int bin_e) {
		this.io.setIntField(this, 3, bin_e);
		return this;
	}
	/** C type : int16_t* */
	@Field(4) 
	public Pointer<Short > fft_buf() {
		return this.io.getPointerField(this, 4);
	}
	/** C type : int16_t* */
	@Field(4) 
	public tuning_state fft_buf(Pointer<Short > fft_buf) {
		this.io.setPointerField(this, 4, fft_buf);
		return this;
	}
	/**
	 * length == 2^bin_e<br>
	 * C type : int64_t*
	 */
	@Field(5) 
	public Pointer<Long > avg() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * length == 2^bin_e<br>
	 * C type : int64_t*
	 */
	@Field(5) 
	public tuning_state avg(Pointer<Long > avg) {
		this.io.setPointerField(this, 5, avg);
		return this;
	}
	/**
	 * lebgth == crop_i2 - crop_i1 + 1<br>
	 * C type : double*
	 */
	@Field(6) 
	public Pointer<Double > dbm() {
		return this.io.getPointerField(this, 6);
	}
	/**
	 * lebgth == crop_i2 - crop_i1 + 1<br>
	 * C type : double*
	 */
	@Field(6) 
	public tuning_state dbm(Pointer<Double > dbm) {
		this.io.setPointerField(this, 6, dbm);
		return this;
	}
	@Field(7) 
	public int samples() {
		return this.io.getIntField(this, 7);
	}
	@Field(7) 
	public tuning_state samples(int samples) {
		this.io.setIntField(this, 7, samples);
		return this;
	}
	@Field(8) 
	public int downsample() {
		return this.io.getIntField(this, 8);
	}
	@Field(8) 
	public tuning_state downsample(int downsample) {
		this.io.setIntField(this, 8, downsample);
		return this;
	}
	/** for the recursive filter */
	@Field(9) 
	public int downsample_passes() {
		return this.io.getIntField(this, 9);
	}
	/** for the recursive filter */
	@Field(9) 
	public tuning_state downsample_passes(int downsample_passes) {
		this.io.setIntField(this, 9, downsample_passes);
		return this;
	}
	@Field(10) 
	public int comp_fir_size() {
		return this.io.getIntField(this, 10);
	}
	@Field(10) 
	public tuning_state comp_fir_size(int comp_fir_size) {
		this.io.setIntField(this, 10, comp_fir_size);
		return this;
	}
	@Field(11) 
	public int peak_hold() {
		return this.io.getIntField(this, 11);
	}
	@Field(11) 
	public tuning_state peak_hold(int peak_hold) {
		this.io.setIntField(this, 11, peak_hold);
		return this;
	}
	@Field(12) 
	public int linear() {
		return this.io.getIntField(this, 12);
	}
	@Field(12) 
	public tuning_state linear(int linear) {
		this.io.setIntField(this, 12, linear);
		return this;
	}
	@Field(13) 
	public int bin_spec() {
		return this.io.getIntField(this, 13);
	}
	@Field(13) 
	public tuning_state bin_spec(int bin_spec) {
		this.io.setIntField(this, 13, bin_spec);
		return this;
	}
	@Field(14) 
	public double crop() {
		return this.io.getDoubleField(this, 14);
	}
	@Field(14) 
	public tuning_state crop(double crop) {
		this.io.setDoubleField(this, 14, crop);
		return this;
	}
	@Field(15) 
	public int crop_i1() {
		return this.io.getIntField(this, 15);
	}
	@Field(15) 
	public tuning_state crop_i1(int crop_i1) {
		this.io.setIntField(this, 15, crop_i1);
		return this;
	}
	@Field(16) 
	public int crop_i2() {
		return this.io.getIntField(this, 16);
	}
	@Field(16) 
	public tuning_state crop_i2(int crop_i2) {
		this.io.setIntField(this, 16, crop_i2);
		return this;
	}
	@Field(17) 
	public int freq_low() {
		return this.io.getIntField(this, 17);
	}
	@Field(17) 
	public tuning_state freq_low(int freq_low) {
		this.io.setIntField(this, 17, freq_low);
		return this;
	}
	@Field(18) 
	public int freq_high() {
		return this.io.getIntField(this, 18);
	}
	@Field(18) 
	public tuning_state freq_high(int freq_high) {
		this.io.setIntField(this, 18, freq_high);
		return this;
	}
	/**
	 * having the iq buffer here is wasteful, but will avoid contention<br>
	 * C type : uint8_t*
	 */
	@Field(19) 
	public Pointer<Byte > buf8() {
		return this.io.getPointerField(this, 19);
	}
	/**
	 * having the iq buffer here is wasteful, but will avoid contention<br>
	 * C type : uint8_t*
	 */
	@Field(19) 
	public tuning_state buf8(Pointer<Byte > buf8) {
		this.io.setPointerField(this, 19, buf8);
		return this;
	}
	@Field(20) 
	public int buf_len() {
		return this.io.getIntField(this, 20);
	}
	@Field(20) 
	public tuning_state buf_len(int buf_len) {
		this.io.setIntField(this, 20, buf_len);
		return this;
	}
	/**
	 * pthread_mutex_t buf_mutex;<br>
	 * C type : int*
	 */
	@Field(21) 
	public Pointer<Integer > window_coefs() {
		return this.io.getPointerField(this, 21);
	}
	/**
	 * pthread_mutex_t buf_mutex;<br>
	 * C type : int*
	 */
	@Field(21) 
	public tuning_state window_coefs(Pointer<Integer > window_coefs) {
		this.io.setPointerField(this, 21, window_coefs);
		return this;
	}
	/**
	 * points to an element of s_tables<br>
	 * C type : sine_table*
	 */
	@Field(22) 
	public Pointer<sine_table > sine() {
		return this.io.getPointerField(this, 22);
	}
	/**
	 * points to an element of s_tables<br>
	 * C type : sine_table*
	 */
	@Field(22) 
	public tuning_state sine(Pointer<sine_table > sine) {
		this.io.setPointerField(this, 22, sine);
		return this;
	}
	public tuning_state() {
		super();
	}
	public tuning_state(Pointer pointer) {
		super(pointer);
	}
}

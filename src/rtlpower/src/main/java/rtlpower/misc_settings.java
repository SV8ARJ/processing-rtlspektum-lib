package rtlpower;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : line 89</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("rtlpower") 
public class misc_settings extends StructObject {
	static {
		BridJ.register();
	}
	@Field(0) 
	public int boxcar() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public misc_settings boxcar(int boxcar) {
		this.io.setIntField(this, 0, boxcar);
		return this;
	}
	@Field(1) 
	public int comp_fir_size() {
		return this.io.getIntField(this, 1);
	}
	@Field(1) 
	public misc_settings comp_fir_size(int comp_fir_size) {
		this.io.setIntField(this, 1, comp_fir_size);
		return this;
	}
	@Field(2) 
	public int peak_hold() {
		return this.io.getIntField(this, 2);
	}
	@Field(2) 
	public misc_settings peak_hold(int peak_hold) {
		this.io.setIntField(this, 2, peak_hold);
		return this;
	}
	@Field(3) 
	public int linear() {
		return this.io.getIntField(this, 3);
	}
	@Field(3) 
	public misc_settings linear(int linear) {
		this.io.setIntField(this, 3, linear);
		return this;
	}
	@Field(4) 
	public int target_rate() {
		return this.io.getIntField(this, 4);
	}
	@Field(4) 
	public misc_settings target_rate(int target_rate) {
		this.io.setIntField(this, 4, target_rate);
		return this;
	}
	@Field(5) 
	public double crop() {
		return this.io.getDoubleField(this, 5);
	}
	@Field(5) 
	public misc_settings crop(double crop) {
		this.io.setDoubleField(this, 5, crop);
		return this;
	}
	@Field(6) 
	public int gain() {
		return this.io.getIntField(this, 6);
	}
	@Field(6) 
	public misc_settings gain(int gain) {
		this.io.setIntField(this, 6, gain);
		return this;
	}
	/** C type : window_fn_callback* */
	@Field(7) 
	public Pointer<misc_settings.window_fn_callback > window_fn() {
		return this.io.getPointerField(this, 7);
	}
	/** C type : window_fn_callback* */
	@Field(7) 
	public misc_settings window_fn(Pointer<misc_settings.window_fn_callback > window_fn) {
		this.io.setPointerField(this, 7, window_fn);
		return this;
	}
	@Field(8) 
	public int smoothing() {
		return this.io.getIntField(this, 8);
	}
	@Field(8) 
	public misc_settings smoothing(int smoothing) {
		this.io.setIntField(this, 8, smoothing);
		return this;
	}
	public static abstract class window_fn_callback extends Callback<window_fn_callback > {
		public abstract double apply(int int1, int int2);
	};
	public misc_settings() {
		super();
	}
	public misc_settings(Pointer pointer) {
		super(pointer);
	}
}
